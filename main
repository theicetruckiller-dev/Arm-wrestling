-- ================================================================= --
--         Tüm Fonksiyonlar - GÜNCEL KAVO ARAYÜZÜ İLE              --
-- ================================================================= --

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Gelişmiş Kontrol Paneli", "DarkTheme")

local MainTab = Window:NewTab("Tüm Kontroller")
local MainSection = MainTab:NewSection("Kontroller")

_G.AutoFarmEnabled = false

MainSection:NewToggle("Weight Sistemi", "Ağırlık sistemini açar veya kapatır.", function(Value)
    game:GetService("ReplicatedStorage").WeightSystem:FireServer(Value)
    if Value then print("Weight Sistemi: AÇIK") else print("Weight Sistemi: KAPALI") end
end)

MainSection:NewToggle("Otomatik Toplama (Spam)", "Açıldığında sürekli en yakın eşyayı toplar. Kapattığında durur.", function(Value)
    _G.AutoFarmEnabled = Value
    if Value then 
        print("Otomatik Toplama Başlatıldı.")
    else
        print("Otomatik Toplama Durduruldu.")
    end
end)

MainSection:NewButton("En Yakın Eşyayı Al (Tek Sefer)", "En yakındaki etkileşimi sadece bir kere tetikler.", function()
    local Players = game:GetService("Players")
    local ProximityPromptService = game:GetService("ProximityPromptService")
    local player = Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    local rootPart, nearestPrompt, shortestDistance = character.HumanoidRootPart, nil, math.huge
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("ProximityPrompt") and v.Enabled then
            local p = v.Parent
            if p:IsA("BasePart") then
                local d = (rootPart.Position - p.Position).Magnitude
                if d < shortestDistance and d <= v.MaxActivationDistance then
                    shortestDistance = d; nearestPrompt = v
                end
            end
        end
    end
    if nearestPrompt then
        ProximityPromptService:PromptTriggered(nearestPrompt)
    else
        print("Yakınlarda bir etkileşim yok.")
    end
end)

task.spawn(function()
    while true do
        if _G.AutoFarmEnabled then
            local Players = game:GetService("Players")
            local ProximityPromptService = game:GetService("ProximityPromptService")
            local player = Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local rootPart, nearestPrompt, shortestDistance = character.HumanoidRootPart, nil, math.huge
                for i,v in pairs(workspace:GetDescendants()) do
                    if v:IsA("ProximityPrompt") and v.Enabled then
                        local p = v.Parent
                        if p:IsA("BasePart") then
                            local d = (rootPart.Position - p.Position).Magnitude
                            if d < shortestDistance and d <= v.MaxActivationDistance then
                                shortestDistance = d; nearestPrompt = v
                            end
                        end
                    end
                end
                if nearestPrompt then
                    ProximityPromptService:PromptTriggered(nearestPrompt)
                end
            end
        end
        task.wait(0.25)
    end
end)

